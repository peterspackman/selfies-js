name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test before publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

  publish-npm:
    name: Publish to npm
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Check if version changed
      id: version
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        NPM_VERSION=$(npm view @peterspackman/selfies version 2>/dev/null || echo "0.0.0")
        echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        echo "npm_version=$NPM_VERSION" >> $GITHUB_OUTPUT
        if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
          echo "should_publish=true" >> $GITHUB_OUTPUT
          echo "Version changed from $NPM_VERSION to $PACKAGE_VERSION"
        else
          echo "should_publish=false" >> $GITHUB_OUTPUT
          echo "Version unchanged at $PACKAGE_VERSION"
        fi

    - name: Publish to npm
      if: steps.version.outputs.should_publish == 'true'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version.outputs.should_publish == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## @peterspackman/selfies ${{ steps.version.outputs.package_version }}
          
          TypeScript port of the Python SELFIES library for robust molecular string representation.
          
          ### Installation
          ```bash
          npm install @peterspackman/selfies@${{ steps.version.outputs.package_version }}
          ```
          
          See [npm package](https://www.npmjs.com/package/@peterspackman/selfies) for details.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-github:
    name: Publish to GitHub Packages
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://npm.pkg.github.com'
        scope: '@peterspackman'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build

    - name: Configure package for GitHub registry
      run: |
        # Ensure publishConfig points to GitHub
        npm pkg set publishConfig.registry="https://npm.pkg.github.com"

    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}